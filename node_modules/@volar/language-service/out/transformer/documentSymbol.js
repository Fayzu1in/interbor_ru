Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = void 0;
const shared = require("@volar/shared");
function transform(symbol, getOtherRange) {
    var _a;
    const range = getOtherRange(symbol.range);
    if (!range) {
        return;
    }
    const selectionRange = getOtherRange(symbol.selectionRange);
    if (!selectionRange) {
        return;
    }
    return Object.assign(Object.assign({}, symbol), { range,
        selectionRange, children: (_a = symbol.children) === null || _a === void 0 ? void 0 : _a.map(child => transform(child, getOtherRange)).filter(shared.notEmpty) });
}
exports.transform = transform;
//# sourceMappingURL=documentSymbol.js.map